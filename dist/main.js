(()=>{"use strict";class e{static initializeSite=e=>{const t=document.createElement("div");t.setAttribute("id","header");const s=document.createElement("h1");s.textContent="Battleship";const a=document.createElement("div");a.setAttribute("id","main");const i=document.createElement("div");i.setAttribute("id","footer");const n=document.createElement("span");n.textContent="Created by ";const r=document.createElement("a");r.href="https://github.com/yurishe0",r.target="_blank",r.textContent="yurishe",t.appendChild(s),n.appendChild(r),i.appendChild(n),e.append(t,a,i)};static createGameboard=e=>{const t=document.querySelector("#main"),s=document.createElement("div");s.classList.add("board-container");const a=document.createElement("span");a.classList.add("player-name"),a.textContent=e.name;const i=document.createElement("div");i.classList.add("gameboard"),i.setAttribute("id",e.name);for(let e=9;e>=0;e--)for(let t=0;t<10;t++){const s=document.createElement("div");s.classList.add("cell"),s.setAttribute("x",t),s.setAttribute("y",e),i.appendChild(s)}s.appendChild(a),s.appendChild(i),t.appendChild(s),"AI"!=e.name&&this.displayShips(e)};static displayShips=e=>{e.gameboard.existingShips.forEach((t=>{t.coords.forEach((t=>{document.querySelector(`#${e.name} [x="${t[0]}"][y="${t[1]}"]`).classList.add("ship")}))}))};static createInfoBoard=()=>{const e=document.querySelector("#main"),t=document.createElement("div");t.setAttribute("id","info-container"),e.append(t)};static displayMessage=(e,t,s)=>{const a=document.querySelector("#info-container");a.innerHTML="";const i=document.createElement("div");i.classList.add("message"),i.classList.add(s);const n=document.createElement("h2");n.textContent=e;const r=document.createElement("span");r.textContent=t,i.append(n,r),a.appendChild(i)};static applyEventListeners(e,t){const s=document.querySelector(`#${e.name}`).children;Array.from(s).forEach((e=>{e.addEventListener("click",(e=>{const s=e.target,a=s.getAttribute("x"),i=s.getAttribute("y");t(a,i)}))}))}static removeEventListeners(e){const t=document.querySelector(`#${e.name}`).children;Array.from(t).forEach((e=>{const t=e.cloneNode(!0);e.parentNode.replaceChild(t,e)}))}static styleHit=(e,t,s)=>{document.querySelector(`#${e.name} [x="${t[0]}"][y="${t[1]}"]`).classList.add(s)};static addHoverEffect=(e,t,s)=>{const a=document.querySelector(`#${e.name}`).children;let i=[];const n=()=>{i.forEach((e=>e.classList.remove("selecting"))),i=[]};Array.from(a).forEach((e=>{e.addEventListener("mouseover",(()=>{(e=>{const a=Number(e.getAttribute("x")),n=Number(e.getAttribute("y"));if("vertical"===s.value)for(let e=0;e<t;e++)n+e<=9&&i.push(document.querySelector(`[x="${a}"][y="${n+e}"]`));else for(let e=0;e<t;e++)a+e<=9&&i.push(document.querySelector(`[x="${a+e}"][y="${n}"]`));i.forEach((e=>e.classList.add("selecting")))})(e)})),e.addEventListener("mouseout",(()=>{n()})),e.addEventListener("click",(()=>{n()}))}))};static addRestartButton=e=>{const t=document.querySelector(".message"),s=document.createElement("button");s.textContent="Restart",s.addEventListener("click",e),t.appendChild(s)}}class t{constructor(e){this.length=e,this.timesHit=0,this.sunk=!1,this.name=this.#e(e),this.coords=[]}#e(e){switch(e){case 2:return"Destroyer";case 3:return"Battleship";case 4:return"Cruiser";case 5:return"Aircraft Carrier";default:return"Unknown ship"}}hit(){this.timesHit+=1,this.isSunk()&&(this.sunk=!0)}isSunk(){return this.timesHit===this.length}}class s{constructor(){this.board=new Array(10).fill(void 0).map((()=>new Array(10).fill(void 0))),this.existingShips=[],this.hitShots=[],this.missedShots=[]}#t(e,t,s,a){if(t<0||s<0||t>9||s>9)return!0;for(let i=0;i<e.length;i++)"vertical"===a?s++:t++;return t>10||s>10}#s(e,t,s,a){const i=[[-1,1],[0,1],[1,1],[-1,0],[0,0],[1,0],[-1,-1],[0,-1],[1,-1]];for(let n=0;n<e.length;n++){const[e,r]="vertical"===a?[t,s+n]:[t+n,s];for(const[t,s]of i){const a=e+t,i=r+s;if(a>=0&&a<=9&&i>=0&&i<=9&&void 0!==this.board[a][i])return!0}}return!1}placeShip(e,s,a,i){s=Number(s),a=Number(a);const n=new t(e);if(this.#t(n,s,a,i))return"invalid";if(this.#s(n,s,a,i))return"invalid";for(let e=0;e<n.length;e++)"vertical"===i?(n.coords.push([s,a+e]),this.board[s][a+e]={ship:n}):(n.coords.push([s+e,a]),this.board[s+e][a]={ship:n});return this.existingShips.push(n),!0}receiveAttack([e,t]){return this.#a([e,t])?"invalid":null==this.board[e][t]?(this.missedShots.push([e,t]),!1):(this.board[e][t].ship.hit(),this.hitShots.push([e,t]),this.board[e][t].ship.sunk?(this.existingShips=this.existingShips.filter((s=>s!==this.board[e][t].ship)),"sunk"):0!==this.existingShips.length||"no ships")}#a([e,t]){return this.hitShots.some((s=>s[0]===e&&s[1]===t))||this.missedShots.some((s=>s[0]===e&&s[1]===t))}shipOnCoords([e,t]){return this.board[e][t].ship}}class a{constructor(e){this.gameboard=new s,this.name=e,this.turn=!0,this.shipLengths=[5,4,3,3,2]}attack(e,t){return e.gameboard.receiveAttack(t)}}class i{constructor(){this.gameboard=new s,this.name="AI",this.turn=!1,this.availableShips=[5,4,3,3,2]}placeRandom(){if(0===this.availableShips.length)return!1;for(;;){const e=Math.floor(10*Math.random()),t=Math.floor(10*Math.random()),s=Math.round(Math.random()<.5)?"vertical":"horizontal";if(!0===this.gameboard.placeShip(this.availableShips[0],e,t,s))break}this.availableShips.shift()}shootRandom(e){for(;;){const t=Math.floor(10*Math.random()),s=Math.floor(10*Math.random()),a=e.gameboard.receiveAttack([t,s]);if("invalid"!==a)return[a,[t,s]]}}}const n=document.querySelector("#root");e.initializeSite(n),class{static start=async()=>{const t=new a("Player"),s=new i;for(let e=0;e<5;e++)s.placeRandom();e.createGameboard(t),e.createInfoBoard(),e.createGameboard(s);const n={value:"vertical"};document.body.addEventListener("contextmenu",(e=>{e.preventDefault(),n.value="vertical"===n.value?"horizontal":"vertical"}));for(let s=0;s<t.shipLengths.length;s++)e.addHoverEffect(t,t.shipLengths[s],n),e.displayMessage("Place your ships!",`Right click to rotate. Placing: length ${t.shipLengths[s]}`,"info"),"invalid"===await this.insertShip(t,t.shipLengths[s],n)&&(s--,e.displayMessage("Invalid placement!","Attempted to place a ship out of bounds or near another ship.","failure"),await new Promise((e=>setTimeout(e,1e3)))),e.displayShips(t);for(e.displayMessage("Game begins!",`${t.name} vs. ${s.name}`,"info"),await new Promise((e=>setTimeout(e,1e3)));!this.#i(t,s);)if(!0===t.turn){e.displayMessage(`${t.name}'s turn`,"Choose your attack...","info");const a=await this.#n(t,s);!0===a||"sunk"===a||"invalid"===a?(t.turn=!0,s.turn=!1):(t.turn=!1,s.turn=!0)}else{e.displayMessage(`${s.name}'s turn`,"The AI is making it's move.","info"),await new Promise((e=>setTimeout(e,1e3)));const a=await this.#n(s,t);!0===a||"sunk"===a?(t.turn=!1,s.turn=!0):(t.turn=!0,s.turn=!1)}const r=0===t.gameboard.existingShips.length?s.name:t.name;e.displayMessage("Game over!",`${r} is the winner!`,"success"),e.addRestartButton(this.restartGame)};static insertShip=(t,s,a)=>new Promise((i=>{e.applyEventListeners(t,(async(n,r)=>{const o=t.gameboard.placeShip(s,n,r,a.value);e.removeEventListeners(t),"invalid"===o&&i("invalid"),i()}))}));static#n=async(t,s)=>{if(t instanceof a)return new Promise((a=>{e.applyEventListeners(s,(async(i,n)=>{const r=t.attack(s,[i,n]);switch(e.removeEventListeners(s),e.styleHit(s,[i,n],r?"hit":"miss"),r){case"invalid":e.displayMessage("The target was already shot.","Pick another target.","failure"),await new Promise((e=>setTimeout(e,1e3))),a("invalid");break;case"sunk":const t=s.gameboard.shipOnCoords([i,n]);e.displayMessage("The attack was successful!",`The ${t.name} has been sunk.`,"success"),t.coords.forEach((t=>{e.styleHit(s,[t[0],t[1]],"sunk")}));break;case!0:e.displayMessage("The attack was successful!","A ship has been hit.","success");break;case!1:e.displayMessage("The attack was unsuccessful!","It was a miss.","failure")}await new Promise((e=>setTimeout(e,1e3))),a(r)}))}));{const a=t.shootRandom(s);switch(e.styleHit(s,[a[1][0],a[1][1]],a[0]?"hit":"miss"),a[0]){case"sunk":e.displayMessage("The attack was successful!","The ship has been sunk.","success"),s.gameboard.shipOnCoords([a[1][0],a[1][1]]).coords.forEach((t=>{e.styleHit(s,[t[0],t[1]],"sunk")}));break;case!0:e.displayMessage("The attack was successful!","A ship has been hit.","success");break;case!1:e.displayMessage("The attack was unsuccessful!","It was a miss.","failure")}return await new Promise((e=>setTimeout(e,1e3))),a[0]}};static#i=(e,t)=>0===e.gameboard.existingShips.length||0===t.gameboard.existingShips.length;static restartGame=()=>{document.querySelector("#main").innerHTML="",this.start()}}.start()})();